---
version: 1.0
root: "./.tests/cloud_test/"
timeout: 7200  # 2 hour total total timeout
shuffle-enabled: false
statistics:
  enabled: true
  interval: 30  # 30 seconds for statistics
providers:
  - name: "kind"    # A name of our provider
    kind: "shell"   # A type of provider, shell indicate we need to specify all operations with shell commands.
    instances: 2    # We need to have 1 instance of cloud.
    node-count: 3   # With 3 nodes, CloudTest will validate if cloud has 3 nodes alive.
    retry: 1        # A retry count if cloud is failed to start tool will try again.
    enabled: true   # Indicate Provider is active with config by default, if set to false, values could be overriden using command line arguments.
    timeout: 300    # 5 minutes to start cluster
    stop-delay: 10
    env:
      - UNIQUE_TEST_NAME=cloudtest-kind-$(rand10)
      - KIND_CLUSTER_NAME_1=${UNIQUE_TEST_NAME}-1
      - KIND_CLUSTER_NAME_2=${UNIQUE_TEST_NAME}-2
      - CONFIG_LOCATION=$(tempdir)/config             # Put Kubernetes configuration file here, $(tempdir) a executable variable name pointing to temporary folder.
      - KUBECONFIG_CLUSTER_1=${CONFIG_LOCATION}-${KIND_CLUSTER_NAME_1}
      - KUBECONFIG_CLUSTER_2=${CONFIG_LOCATION}-${KIND_CLUSTER_NAME_2}
      - INSECURE=true
    scripts:
      start: |
        KIND_CLUSTER_NAME=${KIND_CLUSTER_NAME_1} make kind-start
        KIND_CLUSTER_NAME=${KIND_CLUSTER_NAME_2} make kind-start
      config: |
        KIND_CLUSTER_NAME=${KIND_CLUSTER_NAME_1} CONFIG_LOCATION=${KUBECONFIG_CLUSTER_1} make kind-export-kubeconfig
        KIND_CLUSTER_NAME=${KIND_CLUSTER_NAME_2} CONFIG_LOCATION=${KUBECONFIG_CLUSTER_2} make kind-export-kubeconfig
      stop: |
        KIND_CLUSTER_NAME=${KIND_CLUSTER_NAME_1} make kind-stop
        KIND_CLUSTER_NAME=${KIND_CLUSTER_NAME_2} make kind-stop
      prepare: |
        ${KIND_CLUSTER_NAME_1} make k8s-load-images
        ${KIND_CLUSTER_NAME_2} make k8s-load-images
        ${KIND_CLUSTER_NAME_1} make spire-install
        ${KIND_CLUSTER_NAME_2} make spire-install
        ${KIND_CLUSTER_NAME_1} make k8s-config
        ${KIND_CLUSTER_NAME_2} make k8s-config
executions:
  - name: "Interdomain tests"
    env:
      - ARTIFACTS_ARCHIVE=true
      - USE_JAEGER_SERVICE=true
    source:
      tags:
        - interdomain
    root: ./test/integration
    timeout: 600
    cluster-count: 2
    cluster-selector:
      - kind
      - kind
    cluster-env:
      - KUBECONFIG_CLUSTER_1
      - KUBECONFIG_CLUSTER_2
    on-fail: |
      make k8s-reset
reporting:
  junit-report: "results/junit-interdomain-tests.xml"
